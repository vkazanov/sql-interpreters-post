* DONE Аннотация

  Реляционные базы данных - современный де факто стандарт хранения, обработки и доступа к данным.
  Масштаб таких БД простирается от небольших встроенных в процесс приложения библиотек (TODO:
  SQLite) до распределенных систем в сотни машин (TODO: Hive).

  Внутреннее устройство конкретных баз данных может сильно различаться в зависимости от множества
  факторов: объема данных, требуемой производительностью в видах запросов, некоторых ключевых
  архитектурных решений. Объединяет же эти базы данных только реляционная модель и общий интерфейс
  доступа к данным - язык SQL.

  Данная статья рассматривает основы реляционной алгебры, ее связи с языком SQL, и описывает
  реализацию интерпретатора небольшого диалекта SQL. На базе примера интерпретатора-примера
  объясняются более современные подходы к компиляции и интерпретации SQL.

* DONE Исторический обзор: реляционная алгебра и SQL

  Реляционная модель данных была предложена Эдгаром Коддом в 1970 году (TODO: link) во время работы
  в одной из исследовательских групп компании IBM. Вместе с моделью Кодд разработал язык для работы
  с данными - реляционную алгебру. Модель и сопутствующая алгебра в первые годы после публикации не
  получили распространения в СУБД от IBM.

  Несмотря на это Кодд активно занимался популяризацией своих идей внутри компании, а на одной из
  внутренних корпоративных презентаций с его работами познакомились Реймонд Бойс и Дональд
  Чемберлен, занимавшиеся тогда исследованиями в области языков запросов для СУБД. Идеи Кодда
  показались им перспективными, но слишком ориентированными на математиков. Поэтому ученые занялись
  альтеративным реляционной алгебре языком запросов и результат своих исследований - язык Sequel -
  опубликовали в 1974 году (TODO: link). Позже из-за конфликта имен с других языком программирования
  Sequel получил современное название SQL (TODO: history link).

  Новый язык и соответствующая ему модель данных были выбраны в качестве основных разработчиками еще
  одного проекта IBM - исследовательской СУБД System R (TODO: history link), разработка которой
  велась в середине 70-х. System R стала моделью для множества успешных сторонних коммерческих баз
  данных и собственной реляционной СУБД компании IBM - DB2. Уже в 1984 годы был опубликован первый
  стандарт языка SQL (TODO: link). Язык SQL стал современным стандартом в области работы с данными.

  Модель данных SQL упрощает и видоизменяет исходную реляционную модель данных, за что ее долго
  критиковал сам Кодд; но удивительным образом в современных БД нашли свое место и ключевые элементы
  реляционной алгебры, и декларативный SQL, что можно будет увидеть в интерпретаторе-примере.

* TODO Традиционные реляционные БД

  - Hardware IO bottleneck and buffer management

  - PostgreSQL

  - MySQL

* TODO Реляционная алгебра на пальцах
* TODO Модель Volcano на итераторах

  - cheap CPU and expensive IO leads

  - the canonical paper

  - the iterator cascade idea

* TODO Интерпретатор-пример

  - relations, relation attributes and tuples

  - scan op

  - project op

  - select op

  - join op

  - sort op

  - compiling select queries

* TODO Новые аппаратные возможности и архитектура реляционных БД

  - RAM can be huge now so buffer management is not always needed

  - anti-caching proposal and examples

  - non-volatile storage, i.e. hard disks, SSDs a newer types of memory

* TODO Альтернативные подходы к интерпретации запросов

  - push-based model

  - vectorized query execution

* TODO Динамическая компиляция запросов

  - MemSQL and compiling: C++ -> .so -> execute

  - PostgreSQL jit query compilation
* TODO Библиография

  - paper on the history of SQL

  - book with a Java-based example

  - the std implementation book

  - System R paper

  - PostgreSQL links and comments on older versions

  - paper introducing relational algebra

  - anti-caching paper

  - paper on traditional query evaluation

  - paper on volcano-style processing

  - PostgreSQL jit compilation

  - SQLite

  - push-based interpreter model

  - vectorwise paper

  - compiling queries papers
